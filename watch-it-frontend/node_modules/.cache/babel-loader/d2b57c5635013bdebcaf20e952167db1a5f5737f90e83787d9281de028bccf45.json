{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chad\\\\Documents\\\\My Projects\\\\watch-it\\\\watch-it-frontend\\\\src\\\\components\\\\MovieSectionList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\nimport { useFetch } from \"../hooks/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSectionList = props => {\n  _s();\n  var _movies$results;\n  const [movies] = useFetch(`${window.env.API_URL}${props.list}`);\n  // const [movies, setMovies] = useState([]);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const response = await fetch(`http://localhost:8000/api/${props.list}`);\n  //       const data = await response.json();\n  //       setMovies(data.results);\n  //     } catch (error) {\n  //       console.error(\"Error fetching now playing movies:\", error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, [props.list]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.list, \" Movies\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (_movies$results = movies.results) === null || _movies$results === void 0 ? void 0 : _movies$results.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieSectionList, \"uwG7YN8oJCqlpD4372OICtuxRnI=\", false, function () {\n  return [useFetch];\n});\n_c = MovieSectionList;\nexport default MovieSectionList;\nvar _c;\n$RefreshReg$(_c, \"MovieSectionList\");","map":{"version":3,"names":["useFetch","jsxDEV","_jsxDEV","MovieSectionList","props","_s","_movies$results","movies","window","env","API_URL","list","children","fileName","_jsxFileName","lineNumber","columnNumber","results","map","movie","title","release_date","overview","id","_c","$RefreshReg$"],"sources":["C:/Users/Chad/Documents/My Projects/watch-it/watch-it-frontend/src/components/MovieSectionList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\nimport { useFetch } from \"../hooks/hooks\";\r\n\r\nconst MovieSectionList = (props) => {\r\n  const [movies] = useFetch(`${window.env.API_URL}${props.list}`);\r\n  // const [movies, setMovies] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await fetch(`http://localhost:8000/api/${props.list}`);\r\n  //       const data = await response.json();\r\n  //       setMovies(data.results);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching now playing movies:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, [props.list]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{props.list} Movies</h1>\r\n      <ul>\r\n        {movies.results?.map((movie) => (\r\n          <li key={movie.id}>\r\n            <h2>{movie.title}</h2>\r\n            <p>Release Date: {movie.release_date}</p>\r\n            <p>{movie.overview}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieSectionList;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAClC,MAAM,CAACC,MAAM,CAAC,GAAGP,QAAQ,CAAC,GAAGQ,MAAM,CAACC,GAAG,CAACC,OAAO,GAAGN,KAAK,CAACO,IAAI,EAAE,CAAC;EAC/D;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAKR,KAAK,CAACO,IAAI,EAAC,SAAO;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bd,OAAA;MAAAU,QAAA,GAAAN,eAAA,GACGC,MAAM,CAACU,OAAO,cAAAX,eAAA,uBAAdA,eAAA,CAAgBY,GAAG,CAAEC,KAAK,iBACzBjB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAKO,KAAK,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBd,OAAA;UAAAU,QAAA,GAAG,gBAAc,EAACO,KAAK,CAACE,YAAY;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCd,OAAA;UAAAU,QAAA,EAAIO,KAAK,CAACG;QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHhBG,KAAK,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CAhCIF,gBAAgB;EAAA,QACHH,QAAQ;AAAA;AAAAwB,EAAA,GADrBrB,gBAAgB;AAkCtB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}